#!/bin/sh
# PCP QA Test No. 1508
# novalue() for derived metrics
#
# Copyright (c) 2024 Ken McDonell.  All Rights Reserved.
#

if [ $# -eq 0 ]
then
    seq=`basename $0`
    echo "QA output created by $seq"
else
    # use $seq from caller, unless not set
    [ -n "$seq" ] || seq=`basename $0`
    echo "QA output created by `basename $0` $*"
fi

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

$sudo rm -rf $tmp $tmp.* $seq.full

do_valgrind=false
if [ "$1" = "--valgrind" ]
then
    _check_valgrind
    do_valgrind=true
fi

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=0	# success is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

# Derived metric expr dump from 0x8513a48...
# expr node 0x867eb68 type=PLUS left=0x867eb98 right=0x867ed28
_filter()
{
    cat $tmp.out >>$seq.full
    awk <$tmp.out >$tmp.sed '
BEGIN				{ n = 0 }
# expr node 0x9edc340 type=PLUS left=0x9edc2f8 right=0x9edc370
$1 == "expr" && $2 == "node" && $3 ~ /^0x/	{ print "s/" $3 "/<addr-" n ">/"; n++ }
				{ next }'
    echo "=== sed ===" >>$seq.full
    cat $tmp.sed >>$seq.full
    sed -f $tmp.sed <$tmp.out \
    | sed \
	-e '/[0-9][0-9]:[0-9][0-9]:[0-9][0-9]/s/[^ ]*.*numpmid/TIMESTAMP ... numpmid/' \
	-e 's/=0x0 /=(nil) /g' \
	-e "s;$tmp;TMP;"
# -e 's/ val=[0-9][0-9]*/ val=<number>/g'
}

# real QA test starts here

cat <<'End-of-File' >$tmp.config
# ok cases - value is sample.bin
qa.values.a = !defined(sample.bin) ? novalue() : sample.bin
qa.values.b = defined(sample.bin) ? sample.bin : novalue()
# expect value == 12
qa.values.c = defined(sample.bin) ? (defined(sample.colour) ? count(sample.bin) + count(sample.colour) : novalue()) : novalue()
qa.values.d = defined(sample.bin) && defined(sample.colour) ? count(sample.bin) + count(sample.colour) : novalue()

# ok cases - expect no values
qa.novalues.a = !defined(sample.bin) ? sample.bin : novalue()
qa.novalues.b = defined(sample.bin) ? novalue() : sample.bin

# Marko's case
tcprecv = defined(no.such.metric) ? no.such.metric : novalue()

# error cases
qa.bad.a = novalue()
qa.bad.b = sample.colour + novalue()
qa.bad.c = defined(sample.bin) ? novalue() : novalue()

#
End-of-File

export PCP_DERIVED_CONFIG=$tmp.config

if $do_valgrind
then
    _run_valgrind ...your test goes here...
else
    pminfo -Dderive -Dappl1 -df qa 2>&1
fi >$tmp.out

_filter <$tmp.out

# success, all done
exit
