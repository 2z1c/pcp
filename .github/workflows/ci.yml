# Runs the sanity testsuite
name: CI
on:
  push:
    # run on all branches, no tags
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:

jobs:
  qa:
    name: ${{ matrix.platform }} [${{ matrix.runner }}]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
# default platforms for CI in the performancecopilot/pcp repo
          - {platform: ubuntu1604,     runner: container, os: ubuntu-20.04}
          - {platform: ubuntu1804i386, runner: container, os: ubuntu-20.04}
          - {platform: ubuntu2004,     runner: direct,    os: ubuntu-20.04}
          - {platform: fedora33,       runner: container, os: ubuntu-20.04}
          - {platform: centos8,        runner: container, os: ubuntu-20.04}
# other platforms that may be used for testing in developer repos
#          - {platform: fedora_rawhide, runner: container, os: ubuntu-20.04}
#          - {platform: ubuntu1804,     runner: direct,    os: ubuntu-18.04}
#          - {platform: debian10,       runner: container, os: ubuntu-20.04}
#          - {platform: debian11,       runner: container, os: ubuntu-20.04}
#          - {platform: centos6,        runner: container, os: ubuntu-20.04}
#          - {platform: centos7,        runner: container, os: ubuntu-20.04}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Fix local hostname DNS lookup
        if: matrix.runner == 'direct'
        run: echo 127.0.1.1 $(hostname --fqdn) $(hostname) | sudo tee -a /etc/hosts

      - name: Update version information
        run: |
          . ./VERSION.pcp
          PACKAGE_BUILD="0.$(date +'%Y%m%d').$(git rev-parse --short HEAD)"
          PCP_VERSION=${PACKAGE_MAJOR}.${PACKAGE_MINOR}.${PACKAGE_REVISION}
          PCP_BUILD_VERSION=${PCP_VERSION}-${PACKAGE_BUILD}
          sed -i "s/PACKAGE_BUILD=.*/PACKAGE_BUILD=${PACKAGE_BUILD}/" VERSION.pcp
          sed -i "1 s/(.*)/(${PCP_BUILD_VERSION})/" debian/changelog

      - name: Setup
        run: |
          python3 -c 'import yaml' || pip3 install pyyaml
          mkdir -p artifacts/build artifacts/test
          touch artifacts/test/.keep

          for i in $(seq 1 10)
          do
            if [ $i -gt 1 ]; then
              echo && echo "Probably network error, wait 5 min and try again ($i/10)..."
              sleep 300
              sudo podman system prune -a -f
            fi

            ./build/ci/run.py --runner ${{ matrix.runner }} --platform ${{ matrix.platform }} setup && exit 0 || true
          done
          exit 1

      - name: Install build dependencies
        run: ./build/ci/run.py --runner ${{ matrix.runner }} --platform ${{ matrix.platform }} task install_build_dependencies

      - name: Build
        run: ./build/ci/run.py --runner ${{ matrix.runner }} --platform ${{ matrix.platform }} task build

      - name: Copy build artifacts
        run: ./build/ci/run.py --runner ${{ matrix.runner }} --platform ${{ matrix.platform }} artifacts build --path ./artifacts/build

      - name: Publish build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.platform }}-${{ matrix.runner }}
          path: ./artifacts/build

      - name: Install
        run: ./build/ci/run.py --runner ${{ matrix.runner }} --platform ${{ matrix.platform }} task install

      - name: Initialize QA
        id: init_qa
        run: ./build/ci/run.py --runner ${{ matrix.runner }} --platform ${{ matrix.platform }} task init_qa

      - name: QA (sanity group)
        run: ./build/ci/run.py --runner ${{ matrix.runner }} --platform ${{ matrix.platform }} task qa_sanity

      - name: Copy test results
        # always() is required here to run this step even if the QA step fails
        if: always() && steps.init_qa.outcome == 'success'
        run: ./build/ci/run.py --runner ${{ matrix.runner }} --platform ${{ matrix.platform }} artifacts test --path ./artifacts/test

      - name: Publish test results
        if: always() && steps.init_qa.outcome == 'success'
        uses: actions/upload-artifact@v2
        with:
          name: test-${{ matrix.platform }}-${{ matrix.runner }}
          path: ./artifacts/test
